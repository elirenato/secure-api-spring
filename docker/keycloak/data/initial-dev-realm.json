{
  "id": "3b66e6e7-a3f7-4250-b725-43e26f2a3abc",
  "realm": "app",
  "displayName": "",
  "displayNameHtml": "",
  "notBefore": 1729398854,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 86400,
  "accessTokenLifespanForImplicitFlow": 86400,
  "ssoSessionIdleTimeout": 86400,
  "ssoSessionMaxLifespan": 86400,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "def19ce7-dd7d-42d4-9605-90266a99ac22",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "3b66e6e7-a3f7-4250-b725-43e26f2a3abc",
        "attributes": {}
      },
      {
        "id": "d88dc78b-f1a7-4cd0-b0ae-79fc75e3f780",
        "name": "default-roles-app",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "3b66e6e7-a3f7-4250-b725-43e26f2a3abc",
        "attributes": {}
      },
      {
        "id": "fc3ffba9-a2bc-4237-bafd-08be02b08ab4",
        "name": "ROLE_ADMIN",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "3b66e6e7-a3f7-4250-b725-43e26f2a3abc",
        "attributes": {}
      },
      {
        "id": "7d4e02f2-cccc-4382-bb96-5d68b0a3d59c",
        "name": "ROLE_ANALYST",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "3b66e6e7-a3f7-4250-b725-43e26f2a3abc",
        "attributes": {}
      },
      {
        "id": "c7b85544-9bf6-43ba-af37-eb0b2c3ef6b9",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "3b66e6e7-a3f7-4250-b725-43e26f2a3abc",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "c9ba06cc-fca0-4170-aa8f-928938305450",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "bbae009a-aaa1-4ea2-81ce-fe2de7c5fbcf",
          "attributes": {}
        },
        {
          "id": "c4b492b5-2290-44ba-af26-395a54829ade",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "bbae009a-aaa1-4ea2-81ce-fe2de7c5fbcf",
          "attributes": {}
        },
        {
          "id": "4a15a9c1-9702-402d-8aa8-174258daba67",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "bbae009a-aaa1-4ea2-81ce-fe2de7c5fbcf",
          "attributes": {}
        },
        {
          "id": "a9ed355a-8e00-4741-842f-a24dffc7d820",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "bbae009a-aaa1-4ea2-81ce-fe2de7c5fbcf",
          "attributes": {}
        },
        {
          "id": "a6a56ce8-3503-4d1e-b2d0-00f652e4b459",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "bbae009a-aaa1-4ea2-81ce-fe2de7c5fbcf",
          "attributes": {}
        },
        {
          "id": "8143e216-a1b4-468c-9e97-7e7fc986c0c5",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "bbae009a-aaa1-4ea2-81ce-fe2de7c5fbcf",
          "attributes": {}
        },
        {
          "id": "ef00a061-84bf-4e5e-9e2f-bfe95f1855f6",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "bbae009a-aaa1-4ea2-81ce-fe2de7c5fbcf",
          "attributes": {}
        },
        {
          "id": "5c8efdce-bd51-437e-bc70-2f822f460734",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "bbae009a-aaa1-4ea2-81ce-fe2de7c5fbcf",
          "attributes": {}
        },
        {
          "id": "6e07feed-50f4-4c58-9408-a229f08453af",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "bbae009a-aaa1-4ea2-81ce-fe2de7c5fbcf",
          "attributes": {}
        },
        {
          "id": "384f6403-0fd5-41d7-aff0-c00a05692963",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "bbae009a-aaa1-4ea2-81ce-fe2de7c5fbcf",
          "attributes": {}
        },
        {
          "id": "e0ef173d-d213-406a-8480-42cb12669954",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "bbae009a-aaa1-4ea2-81ce-fe2de7c5fbcf",
          "attributes": {}
        },
        {
          "id": "a4e4184c-44ec-4a01-a742-429f368607d9",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "bbae009a-aaa1-4ea2-81ce-fe2de7c5fbcf",
          "attributes": {}
        },
        {
          "id": "49926859-0bbd-4d77-8628-6bc912e0824d",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "bbae009a-aaa1-4ea2-81ce-fe2de7c5fbcf",
          "attributes": {}
        },
        {
          "id": "a4a97aee-13af-4155-9230-d6f1a57cb261",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "bbae009a-aaa1-4ea2-81ce-fe2de7c5fbcf",
          "attributes": {}
        },
        {
          "id": "bd39c066-d344-4f36-9dc0-efbde99fb865",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "bbae009a-aaa1-4ea2-81ce-fe2de7c5fbcf",
          "attributes": {}
        },
        {
          "id": "06675fcc-e4b3-4ad4-b2a8-2af5a7bd9b93",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "bbae009a-aaa1-4ea2-81ce-fe2de7c5fbcf",
          "attributes": {}
        },
        {
          "id": "e663bbb6-2bfb-41cf-b9c4-ba442a076b03",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "bbae009a-aaa1-4ea2-81ce-fe2de7c5fbcf",
          "attributes": {}
        },
        {
          "id": "0e8f526e-4d47-47ea-a996-3dbc24de18f3",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-identity-providers",
                "view-realm",
                "view-clients",
                "query-realms",
                "manage-authorization",
                "manage-realm",
                "manage-clients",
                "manage-events",
                "impersonation",
                "manage-users",
                "query-users",
                "manage-identity-providers",
                "query-clients",
                "view-users",
                "view-authorization",
                "view-events",
                "query-groups",
                "create-client"
              ]
            }
          },
          "clientRole": true,
          "containerId": "bbae009a-aaa1-4ea2-81ce-fe2de7c5fbcf",
          "attributes": {}
        },
        {
          "id": "396474c7-22e2-42a0-9919-d03d36c315dc",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "bbae009a-aaa1-4ea2-81ce-fe2de7c5fbcf",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "fc12b691-1bd2-4d1f-a54d-306e2c152c1d",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "b8536051-1f7a-4b47-81f6-4dba20796d23",
          "attributes": {}
        }
      ],
      "secure-api": [
        {
          "id": "75644d36-3d66-452c-add4-1a85613cb2a5",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "ebbed9db-4716-4eb9-97cb-97fe9c95aebe",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "27f0518f-642b-4f8e-a708-afc3c1303a13",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "8dab354f-2c1e-4a94-813f-9c3e20a188b6",
          "attributes": {}
        },
        {
          "id": "0fe8ccd7-560b-4874-a112-91f4061567dc",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "8dab354f-2c1e-4a94-813f-9c3e20a188b6",
          "attributes": {}
        },
        {
          "id": "172ac9c0-eae4-4823-9616-44bb15486cc4",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "8dab354f-2c1e-4a94-813f-9c3e20a188b6",
          "attributes": {}
        },
        {
          "id": "b9da99e3-ae20-4d02-9be8-f3bcbb474bfd",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "8dab354f-2c1e-4a94-813f-9c3e20a188b6",
          "attributes": {}
        },
        {
          "id": "e808d382-25d2-4323-ac6a-a0107760f112",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "8dab354f-2c1e-4a94-813f-9c3e20a188b6",
          "attributes": {}
        },
        {
          "id": "5abcb4b5-8a59-40da-b838-1a7ac39dc853",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "8dab354f-2c1e-4a94-813f-9c3e20a188b6",
          "attributes": {}
        },
        {
          "id": "5404153a-02e1-48ae-b991-c8642b6f346f",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "8dab354f-2c1e-4a94-813f-9c3e20a188b6",
          "attributes": {}
        },
        {
          "id": "026c9100-205c-4074-a428-e64da5b234a5",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "8dab354f-2c1e-4a94-813f-9c3e20a188b6",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "d88dc78b-f1a7-4cd0-b0ae-79fc75e3f780",
    "name": "default-roles-app",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "3b66e6e7-a3f7-4250-b725-43e26f2a3abc"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256",
    "RS256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256",
    "RS256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "48f36c2f-5ef4-427d-92d1-dc00509f8037",
      "username": "admin",
      "firstName": "Admin",
      "lastName": "User",
      "email": "admin@localhost",
      "emailVerified": true,
      "createdTimestamp": 1728424592896,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "9cb9c663-9af7-45bf-ad1c-409443247898",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1728424830866,
          "secretData": "{\"value\":\"uhWp0z1YZJDMzwOaBLeIdOwxrJl42OL1+J+fOf/UAk0=\",\"salt\":\"BxPRIUbwnZ4ohCHxIBg5Hg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-app",
        "ROLE_ADMIN"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "b75dfd0b-d1b1-48d4-aa92-f4402a37ad98",
      "username": "analyst",
      "firstName": "Analyst",
      "lastName": "User",
      "email": "analyst@localhost",
      "emailVerified": true,
      "createdTimestamp": 1728424864977,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "a9a42924-50a7-4048-ae14-82fd1494d316",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1728424905002,
          "secretData": "{\"value\":\"Zl3Q5u4Ev+HqBF7mM0HHsSRvniQyEP+81tWLC9JFoWI=\",\"salt\":\"5LkIRSrQJNBF9GGnKQvTaw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-app",
        "ROLE_ANALYST"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "a0e44c91-f11b-406c-b689-eecc32194a4d",
      "username": "service-account-secure-api",
      "emailVerified": false,
      "createdTimestamp": 1729398913009,
      "enabled": true,
      "totp": false,
      "serviceAccountClientId": "secure-api",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-app"
      ],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "8dab354f-2c1e-4a94-813f-9c3e20a188b6",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/app/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/app/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "1cacb769-1602-4721-a3c7-6841a9c4d134",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/app/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/app/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "4591410b-0cfb-4675-a932-26417074cf47",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "acfeb4aa-cbb7-4a04-b477-5b8ad7cf93be",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b8536051-1f7a-4b47-81f6-4dba20796d23",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "bbae009a-aaa1-4ea2-81ce-fe2de7c5fbcf",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "ebbed9db-4716-4eb9-97cb-97fe9c95aebe",
      "clientId": "secure-api",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "g4IxblGdPXsmBv4upQn4hGqnzTqsOeBV",
      "redirectUris": [
        "http://localhost:8081/*",
        "https://jwt.io"
      ],
      "webOrigins": [
        "http://localhost:8081"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1728424333",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "0416b5d4-6eab-4122-a32b-b5f61493d3c5",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3d0e4fdf-1da2-4339-8353-5fc2e980c43d",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "117a2696-6e52-4d57-9b2b-54e646efc5f0",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1bbf3463-98d9-464d-950e-febe177f99de",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3fe742e2-9101-48ba-aaba-ad9cd4df48a2",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "organization",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "54ea3e71-2699-4c53-9679-814cc7e9e2a8",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/app/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/app/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "c051e3b2-75d0-4954-af5c-ac333f53b244",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "7f6d70fc-a378-409e-a369-ca33e3f5999b",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "dd73dddd-578d-40bb-a0d5-b175b746919c",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0e8e2c71-1a31-4083-9e0e-dfb4e498ac2a",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d4aa7a5f-715b-4877-9e4c-6c60df6ab984",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "de85b963-84b8-441a-9fb4-c95f7fd456ac",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "67be26d1-ae22-4fa4-862d-cb200acef1de",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "fba17338-4fb5-4b81-a520-599757b7d8ff",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "9366b90b-c8d7-4672-91c4-bd4d032c9c3a",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a7cda6a2-59ca-448f-ac88-e570d527bc2c",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "0ccf9039-e5c8-439b-9378-57e9c34b89ba",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "db3fbf73-81c8-4338-88e0-0ab09f2b21ac",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a76520cb-6afc-4685-a5bd-53525805b548",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bf70798f-21bd-450c-9ea0-71553dad7f8d",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "638439ec-50cf-48d3-aec4-13aece82da07",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "796dfe00-6a3c-4a17-b2ac-3ce5b06447fc",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "e663587b-f093-4b69-a2d4-c48c2a792be6",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "6aed8767-9890-4694-967a-12ac6ab7c793",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "3f2e8158-a21f-4836-8ebf-7dc60d3f8fcb",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "9c9dedff-72c2-4f87-a557-2cdb3a268310",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "8c7912f7-1113-4fab-aea1-b8c6f44dce9b",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "06dbb42a-29ee-434b-9d07-63d5a2a708af",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "91d76c60-76cf-4aed-8655-b3e4756e78e0",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "bc10621e-e5ca-4f02-94db-fa8d14cd3f4e",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "dd5e28ab-492b-493b-b9c2-e86f101361dd",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "71d43dbd-3aa6-44b5-bd9a-9d8dd17045e9",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "40c44469-77ef-4185-92b6-fa2bc606a762",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "c204cac6-b251-4a45-91e0-be7a06df6c3f",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        }
      ]
    },
    {
      "id": "59960d31-be76-4240-b17b-3b3c4cd3aa8b",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "3098c036-8df8-4b83-8875-d0a680c05a1d",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "70d9204e-6ab2-4127-9b4b-cb0a22cfa259",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "2a93b5b8-bf61-4b2d-a80f-001249ddce25",
      "name": "saml_organization",
      "description": "Organization Membership",
      "protocol": "saml",
      "attributes": {
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "770ac93e-aac5-4a3b-bcc6-9e27abbf99d3",
          "name": "organization",
          "protocol": "saml",
          "protocolMapper": "saml-organization-membership-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "3a07ae2a-3a05-45de-ac1f-e2c96c04c354",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "54b9d1f9-802a-437a-a4df-ffe519e13e4f",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "c52445db-e16e-4aad-ae16-0ec4a3f6a9d3",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "03a5d4e5-70e1-4402-aeee-53bd9256d9ea",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "8d7c53fd-55d2-460e-b607-b5aaf3f05835",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "30bb9f5b-de5b-4836-b236-5b67c4a85ddc",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "98762b1f-16fb-4434-be6a-dba25b469fb9",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "98e8dbca-ec28-43c4-bbe9-3abf7af16125",
      "name": "organization",
      "description": "Additional claims about the organization a subject belongs to",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${organizationScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "8f58d065-3abd-4ca7-a5fa-64603c4e3346",
          "name": "organization",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-organization-membership-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organization",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "e32769b0-cba4-400c-8e44-c2b03151eeb0",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "42da0119-8df5-4143-b6d2-816256575b3a",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4745f8ae-5b9a-405b-ad5d-4eb73cc485bf",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "saml_organization",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic",
    "organization"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "72359efe-f547-4f54-8ed8-c81d2ef41bcf",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "b3dc652e-17d8-425f-9abf-491df7cb5b19",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "724a1dcb-b100-4000-b6e9-6c76aa1986a3",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "427f1840-bbf3-41ef-81df-6dea6aefc596",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "a7aaffaa-76da-4669-aac6-81273950321e",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "ea457af5-85f5-4ae4-8871-029368abdb4b",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "bf7b213d-79d8-44a1-a145-fd3235930509",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper",
            "oidc-full-name-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-attribute-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "c738a05f-0e2f-4c16-bf7e-c549ed2e4ce3",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "59dc8b3a-1072-4cf9-80fd-3ff488de5c9a",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "89c26bbe-4015-4182-9b31-7fa0a23b4ef4"
          ],
          "secret": [
            "5S7lmgTqb208nGIRHyaqj05oBFtOXrTRXPFZ0JfegZsPYQ1JFllrU6z3ICfYGEvxKlewj7OYfBWXxcvZNp7Zo1lQM67WHosmaJl72pXBLdTogiC-YAiEzxuGDDQf6YOVqBXJuKEMXAD474rU22htY-RDrw7L--Hp7xhrcRneDz4"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS512"
          ]
        }
      },
      {
        "id": "0f2ce816-62eb-4b73-baac-3dd245a69df0",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "69a44e7c-c4d8-4491-8fe8-3ecbdc3b4d2f"
          ],
          "secret": [
            "95LMJ3_t9Tw68ja_W-70DQ"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "78f08a8b-c7d2-440a-862b-ad16313742df",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAwH24qifLs4D8iDmoMQTAUxLofkUIZ914qWpGJrk3DBLHN4K4+vpcB/KXJ1W15OBEnXR15otUDQBTtldRFPNW3GQ9Pee7cr0E1A+u7HyAFF9JYSqMWioYRrnu4L5/JPx/HO24yF+Lhcj8uoOLCaLJXEKM9RhBTf+5+NpRgSGON+JpckaP9JthVz8FvIInFihHL054AUUkAQZ87zbkIVqV8D/agNmGOxrxZRz2d9HqEjU+WdYtRziQA1Qj63go7CPrUylNiIvM+zPEL7iTQJn5HcQROCaxbKO13ARJkMyQMTuoqx+fN/rsLtJrfBsrLVxND4IFuqtci7NjTFf4NBr4DwIDAQABAoIBAAmpZc74n2NbqpFF35jSRbsFvHC2E1VvSuKqCGpiKo6rFJ/HKnTCg0MM3KRnS3F5Bkim81IGlUnvxcPlvxafnjECwQYt7v0z2p2wSdXp693Z6It9gLz31u8Z3xEdzrDzEYhIsFkyXoTxESplduGdb6D3YC7fMEvzdYi1oJisMADDAMBeQMHWG+hfJp7j5fyRwz8NX8X9AJCDQhNZwPg5k07ZVDscxB6fZ+2OVB81vRkPyfD6HsytbkjBQh9j5sx5da/kbpk9Z1SjmfKb30sk1L8tiwred39V64+e9s2JEYX7DoXefyYnA8u5++uAi+0WEeflpEwfO22YQHFcqlOld2kCgYEA4301ARQjjYrn0LVT19+ffOzzy2P0Y1du71HdprX9OfO4PC587iT25zi6GI9aoo0bGskC9WV4l1cjX0oRffB6wMG7AuL0q7/rJtrn6CTqw/+bdP2bqbnj2a1NSpVwOT6fI/xBc6eXgSh8JFR2eauwPxXFluDNW104IgwbVjr5B7cCgYEA2J2iONYM1xF7bzya6+m0CQnEaTD2vukIKB/fJibgaUzVM79Gl0cq4l6j39nEppjC5hCHR7Iao3sAuMA3m+UcXwhV7v8WSahRyn3Nmho8J3WIHw5+jMCvrk1qCN2QegrO6J0zTrqEV2T8xQkFvqX6HK/M1q+RYjOuf6gLePmTomkCgYEAgL3eHlMoX7UpxfqojXX3y3pJ6mQR7ZqQpI2/E9bQjVh5fk2M1DVFKcv3vWh7kZyrpzf1Ha2kVnmxAf9n8M8EmUvKKzMH5p8BVIb0UXN7DRr9/nJ8Asy5vvoN0NTLownmhDYBUJOa8TRZNTI7rlXUs479uIpWjYsu9k3FtsI/JvcCgYAbGKzgOzZj+NXd9lDSzestbkFZfzx+aRwSGNqLJTXRNkE9NeIYrlhY9Mm/CLimtlk6+jpR55+Zb5uJgNHz+FbyNFK7kMEy+ZExqUb8zedUcElUyTVfWgMf5KMs9LpL6eo0AuYWJRLE8+cCprxHOu/sgrk26cNf62MaqOS2f1HOcQKBgQDFGd1HRh/OyX2CY6/dEGKUj7tasXyZ9niq6BEBUMQWfrTP3iqmolQQFRgSAdrKNoYnOpSWv5o6yuQWWb4crkqqbT6o9NGrvD+iwMpd22aB1kUh/Nuc7nlmn2rAKCLa856JCeNbhTrVcPoaHLkBdmwacN8qfLdXtKY8jIuNKNUzqg=="
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIIClTCCAX0CBgGSbh1n3DANBgkqhkiG9w0BAQsFADAOMQwwCgYDVQQDDANhcHAwHhcNMjQxMDA4MjE0OTMzWhcNMzQxMDA4MjE1MTEzWjAOMQwwCgYDVQQDDANhcHAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDAfbiqJ8uzgPyIOagxBMBTEuh+RQhn3XipakYmuTcMEsc3grj6+lwH8pcnVbXk4ESddHXmi1QNAFO2V1EU81bcZD0957tyvQTUD67sfIAUX0lhKoxaKhhGue7gvn8k/H8c7bjIX4uFyPy6g4sJoslcQoz1GEFN/7n42lGBIY434mlyRo/0m2FXPwW8gicWKEcvTngBRSQBBnzvNuQhWpXwP9qA2YY7GvFlHPZ30eoSNT5Z1i1HOJADVCPreCjsI+tTKU2Ii8z7M8QvuJNAmfkdxBE4JrFso7XcBEmQzJAxO6irH583+uwu0mt8GystXE0PggW6q1yLs2NMV/g0GvgPAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAAMvDv4X71+kAiCWBVljpREWqe1VKp9yP+7p2I7ZZiZyvDQH4gZiTzqpTh/m+sY4Nz10yXugxrFpiusVHdpKyh3WLCwvezv9MJE/3dO7u+havNpv1zd1rEhZy1Z8xyxPi3jb/51J6lrRqeJMdDWeUfN8CFU2yK0HeqViqxRHWk30mdh4tzd+JIMDNsd+CK2Nv4hRcoaFDWP3ViCiq3aXkUySxh/iNu46DWQ5F9IZKUUPujpwHChJ11cyQJDHi7Q1gCenszpqi2ecSvOx0vyD7jYZsl9iWrRptOaldeC5431lI8kdIleUfNHaUelxivjb/MyhpCltsEqmV+NaWFDmlfA="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "28f200b1-0b16-4b36-9550-6fd07d1610d1",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpQIBAAKCAQEA23OGW1wP1gO+58pagFPjWwc9d2RlhLAwaeJWbjGZOdPMDWv9NEU5uJnibtDOtt8+mOtOeefcTn0yv1h98lPrzkAqYCVuuOv/p4Qy4lC9QAeAzpuOM4r7TqGOPGPuHlVLg3sE4IyKCHOmeTxNpmri8GtVx6d+R/MZ4GK5aXgVdeU9IRPcC27wIjiIRxhRNbYn7dBgqlTsgb5C6eG0MCgFVkdX20KvNmMFHKwTUK7yzqaUDeF+Srn471ejxoisLJ65/ef5VB4ipIiHLtyTgn6bJaHhgZZrCA6EPel/j+pb4CCotohFJphXNZADqzZz2aK8MLFQAzCK3/UU0/fueE03TwIDAQABAoIBADmwln745i7YQDz1/LGkm+2nqxhyW5+0o52KQzdnsYS6sXdLzr4JfsGRLq38FYOMj4uqvDAe7FLz5b3YmQ910VUgmCM7Y+6YF9alUa0eFYo6DroBubHCFQuYO+iTSptNx/KyCdewCm9rW7WeTTl0+uDCDsRUO0XV2hUbTuuzhky98Ir5K9OKbq7INnjlQxXFU4moPX9gdC5jzUOAeld88aK99o5l+RBU9tucUJqh+p/aMGEw4L+qGsJgQ+uWWhYm3LuvtH8uhiX2tjGhH/t46IILjzPrqokU8JEKV7ijuUm4Y29+aApfBEtpA+0XPZ/O4dLf6r6XBLDDBs/h5s4O0e0CgYEA9pHC9ctLnPYDrOY3CgYqCLzRwURv48vUKSUAOhQauqW+Bz6TL/dq5O/Iv/UpDc0QxTiHYRMKGyb2Rkrfx717T7e+eo7bg4z2Q/RQkjluciPOuwKjWBM5jKKoknf9++kO4Tb/pFt99XyU96F8UwwftMvCU+zgMBdrXA1pg6z0g70CgYEA49g9xXQPLDGvAJ0dhGPO4RK63OQDEiIzTT5wgW2d4Froy4dRVeN5Up7xobmlkgF5/P63Ri71nbfP4+LDUvancocPZHi8Th4an0pllcz4DxvAwEmySf2kyrParUJPSv/wDeMyL02JDqlK0g5j7WO61IzP0ORDuGBsqekSIgPakfsCgYEA5k4Tyj3PLJblq/OEaUqErJChY2InGKDkVGIJKjZpGPmC24VpOZ5iK+CEpDe71vY5ud0pJlUAVYg49EMvboPf0AASXKtfAisCQ0rKjyoxrU8g47B9HeEnGeM8jUKi608u5NHYSo5iwo9RHVOqqm9ilh7ULkvMw168msi0S5ea9AkCgYEApx2jaSFQQ6UJbBTRYppmUjWPs5bWHcXSBRUIJhaFltp3J1lQMgQPp6cHKgzlwSquE/+r46Fr68u3grl/dGmPtfQUOShJTa7M7gr+aZqWU1aS0Tb8u0J8TWUPvscFK8h/hWAgHgvrvEI1q858QtFEZsQFZX0XorOu4A0gjKxw82MCgYEA2qHownrPnTSOsPHb0USdh2pWO2pI4nAzhuMmJtaWaKQ2UVHnqaBMNfBrScLkm8gnED+dLHe0ddtjEunzJlikK8KF5IQ3O05jZ+QRzIQE6rZ1D5/MHM0aEHIMFpsFpZT58abFyGtNVF6UuIETW4489QO06QLsrVdkmi49tGPVrrc="
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIIClTCCAX0CBgGSbh1nnzANBgkqhkiG9w0BAQsFADAOMQwwCgYDVQQDDANhcHAwHhcNMjQxMDA4MjE0OTMzWhcNMzQxMDA4MjE1MTEzWjAOMQwwCgYDVQQDDANhcHAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDbc4ZbXA/WA77nylqAU+NbBz13ZGWEsDBp4lZuMZk508wNa/00RTm4meJu0M623z6Y605559xOfTK/WH3yU+vOQCpgJW646/+nhDLiUL1AB4DOm44zivtOoY48Y+4eVUuDewTgjIoIc6Z5PE2mauLwa1XHp35H8xngYrlpeBV15T0hE9wLbvAiOIhHGFE1tift0GCqVOyBvkLp4bQwKAVWR1fbQq82YwUcrBNQrvLOppQN4X5KufjvV6PGiKwsnrn95/lUHiKkiIcu3JOCfpsloeGBlmsIDoQ96X+P6lvgIKi2iEUmmFc1kAOrNnPZorwwsVADMIrf9RTT9+54TTdPAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAAViTxnNQIXSi+gnLe9IZxw5gynHvUvvT1IACDxXXN66XSI/VNzYMcaLRJ3QlMVTfLppsJUoygFvwKtUFDm33YvhYBnGvKardMosjmNppUGPNzlRG6/jwdfMqj++BmadXnwh49LLS7IalnVFjN6lOOM9+NhqplblVNE5U5H3bVQh34U7uIRd1Lii/UaQc0DvwRKMuKkFar2KgvPoQ6aYwNphxRz7jk0joBTWW8xJOj+Dv2ZzYl6BysJxoz8T2/oweE7T9pcLWmqua+dZTlc/lQYHN5GF8qoxYAw09XVs08Q7yj/rMkaf8s2fOz+9KgtiYrWOEj54qLXFoO8xjrmqodI="
          ],
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "2f82c172-fec6-4083-a4d4-915ab05d6065",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9907a717-ce36-4424-b1b4-fa574ad9a4fc",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7badb49d-19ab-4c08-83ee-7b33d2aec3fd",
      "alias": "Browser - Conditional Organization",
      "description": "Flow to determine if the organization identity-first login is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "organization",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "554397bc-70be-455e-8970-a911e9f7b72e",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ed3f0fd3-87ee-4f8e-acfa-9075df8c8061",
      "alias": "First Broker Login - Conditional Organization",
      "description": "Flow to determine if the authenticator that adds organization members is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-add-organization-member",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8f9202ca-ed74-4c67-b87d-8280f12a5ef0",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "56217d67-777c-412e-a667-87fcf5716ef3",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9284f662-8986-4e37-a059-5ac13010ba0e",
      "alias": "Organization",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7f426d0f-b04b-4dfe-af34-cabbcd6472d1",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1ff55f53-e05d-4a40-b411-2817d2d544f4",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4f44308a-de95-4d23-b013-d38f129e6ea2",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "48e0f0bb-8e03-47dc-b916-af9b0d94d559",
      "alias": "browser",
      "description": "Browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 26,
          "autheticatorFlow": true,
          "flowAlias": "Organization",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4312688f-121f-4fbd-b66f-e9a97a5c5518",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "35d92b9e-3826-4a4a-aab9-cd66c5b7af32",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "09073a5d-4e27-40fa-8f41-e6213a1d3e5b",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f74db51b-d47f-4ba5-be22-78a36f36ded1",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 50,
          "autheticatorFlow": true,
          "flowAlias": "First Broker Login - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "309ddfa3-44ac-4591-9890-4fe800e41e05",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0186c2df-e51f-4824-9b98-4b62800029f0",
      "alias": "registration",
      "description": "Registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a79add4b-d09a-4651-a23c-91693daec2a1",
      "alias": "registration form",
      "description": "Registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cdfcfb0c-1fc0-47fb-898c-75d0e0e15232",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c5be9c00-d6ea-4a9a-9dfa-becc60fba46c",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "5420b2dd-e385-431b-a37d-9a58754ae26d",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "b68c6b0c-6c05-47df-a985-5a5e076ee225",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "frontendUrl": "",
    "organizationsEnabled": "true",
    "acr.loa.map": "{}"
  },
  "keycloakVersion": "26.0.1",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": true,
  "organizations": [
    {
      "id": "215d9149-17ec-4181-9416-27a97402d4c2",
      "name": "Secure Api Spring",
      "alias": "SecureApiSpring",
      "enabled": true,
      "description": "",
      "attributes": {},
      "domains": [
        {
          "name": "localhost",
          "verified": false
        }
      ],
      "members": [
        {
          "username": "admin",
          "membershipType": "UNMANAGED"
        },
        {
          "username": "analyst",
          "membershipType": "UNMANAGED"
        }
      ]
    }
  ],
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}